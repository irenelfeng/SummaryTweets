We added a feature of median sentence length. We figured males would tweet shorter (we tested this out actually, and on this set of tweets males on average had 9.48 median sentence length, and girls on average had 9.83 median sentence length). This reduced our devdata by 2% (from 33 to 31%) 

We also added a feature of length of emoticons (identifying them as certain parts of speech). This, combined with median sentence length, reduced our devdata by 5% (from 33 to 28%). 

We also modified bagofwords to give more weight to words that are more indicative of gender. We identified these words based on the training data: you may look at our divide method. It returns div_list, with both more “feminine” and “masculine” words.
-	the scale finds words that are s times used more frequently by boys than girls, or vice versa. 
-	Addweight is how much we add to the frequency of the word every time it is used in 
This, combined with our extra features, reduced our devdata to 27% (with a scale of 2 and addweight of 1.8, we could play more with this). 

We played with changing the Ndims, but the loss of information did not really improve our performance on the dev data (we tested a few dimensions – did very badly with dimensions < 100, and did okay with 500-1000 – ex: with Ndims = 1000, Scale = 2, AddWeight = 1.8 gets 26% on devdata).  

We made Ndims, Scale, and AddWeight global variables at the top of our code so this can be manipulated more easily. 


